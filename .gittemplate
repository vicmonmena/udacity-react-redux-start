# Please enter the commit message for your changes based on the following template. 
# Lines starting with '#' will be ignored, and an empty message aborts the commit.
#
# <TYPE>: <SUBJECT>
#
# <BODY>
#
# <FOOTER>
#
# About each section:
#
# The 'TYPE' is contained within the title and can be one of these types:
#   chore: updating build tasks, package manager configs, etc; no production code change
#   feat: a new feature code
#   fix: a bug fix code
#   perf: A code change that improves performance.
#   docs: changes to documentation
#   style: Changes that do not affect the meaning of the code.
#   refactor: A code change that neither fixes a bug or adds a feature.
#   test: Adding missing tests or correcting existing tests.
#
# The 'SCOPE'
#   The scope should be the name of the package affected (as perceived by the person reading the changelog generated from commit messages.
#
# The 'SUBJECT'
#   Subjects should be no greater than 50 characters, should begin with a capital letter and do not end with a period.
#   Use an imperative tone to describe what a commit does, rather than what it did. For example, use change; not changed or changes.
#
# The 'BODY'
#   Not all commits are complex enough to warrant a body, therefore it is optional and only used when a commit requires a bit of explanation and context. Use the body to explain the what and why of a commit, not the how.
#   When writing a body, the blank line between the title and the body is required and you should limit the length of each line to no more than 72 characters.
#
# The 'FOOTER'
#   The footer is optional and is used to reference issue tracker IDs.